/** ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : SCI3.H
**     Project   : Config
**     Processor : MC9S08JM16CGT
**     Component : Init_SCI
**     Version   : Component 01.132, Driver 01.18, CPU db: 3.00.045
**     Compiler  : CodeWarrior HCS08 C Compiler
**     Date/Time : 08/07/2015, 08:55 p.m.
**     Abstract  :
**          This bean encapsulates Serial Communications Interface module
**          This modules allows asynchronous communications with peripheral
**          devices and other microcontroller units (MCU).
**     Settings  :
**          Bean name                                      : SCI3
**          Device                                         : SCI1
**          Settings
**            Baud rate divisor                            : 104
**            Baud rate                                    : 9615.385 baud
**            Loop mode                                    : Disabled
**            Receiver source select                       : Loop mode
**            TxD1 pin direction                           : Output
**            Data Format                                  : 8 bits
**            Stop in Wait mode                            : Disabled
**            Wake up                                      : Idle line wakeup
**            Idle character counting                      : After start bit
**            Parity                                       : None
**            Send break                                   : Disabled
**          Pins
**            RxD pin allocation                           : Enabled
**            RxD pin                                      : PTE1_RxD1
**            RxD pin signal                               : 
**            TxD pin                                      : PTE0_TxD1
**            TxD pin signal                               : 
**          Interrupts
**            Tx interrupt
**              Interrupt                                  : Vsci1tx
**              Transmit interrupt                         : Disabled
**              Transmition complete interrupt             : Enabled
**              ISR name                                   : hola
**            Rx interrupt                                 : 
**              Interrupt                                  : Vsci1rx
**              Receive interrupt                          : Enabled
**              Idle line interrupt                        : Disabled
**              ISR name                                   : tx
**            Error interrupt                              : 
**              Interrupt                                  : Vsci1err
**              Receive framing error interrupt            : Enabled
**              Receive noise error interrupt              : Enabled
**              Receive overrun interrupt                  : Enabled
**              Receive parity error interrupt             : Enabled
**              ISR name                                   : TX
**          Initialization                                 : 
**            Call Init in CPU init. code                  : yes
**            Transmitter                                  : Disabled
**            Receiver                                     : Disabled
**     Contents  :
**         Init - void SCI3_Init(void);
**
**     Copyright : 1997 - 2009 Freescale Semiconductor, Inc. All Rights Reserved.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################*/

#ifndef __SCI3
#define __SCI3

/* MODULE SCI3. */

/*Include shared modules, which are used for whole project*/
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited beans */

#include "Cpu.h"




/*
** ===================================================================
** The interrupt service routine must be implemented by user in one
** of the user modules (see SCI3.c file for more information).
** ===================================================================
*/
__interrupt void hola(void);
__interrupt void tx(void);
__interrupt void TX(void);
void SCI3_Init(void);
/*
** ===================================================================
**     Method      :  SCI3_Init (component Init_SCI)
**
**     Description :
**         This method initializes registers of the SCI module
**         according to this Peripheral Initialization Bean settings.
**         Call this method in user code to initialize the module.
**         By default, the method is called by PE automatically; see
**         "Call Init method" property of the bean for more details.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

/* END SCI3. */

#endif /* ifndef __SCI3 */
/*
** ###################################################################
**
**     This file was created by Processor Expert 3.07 [04.34]
**     for the Freescale HCS08 series of microcontrollers.
**
** ###################################################################
*/
